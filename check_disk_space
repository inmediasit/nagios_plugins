#!/usr/bin/ruby

require "rubygems"
require "bundler/setup"
require "optparse"
require "timeout"
require "net/ssh"

options = {
  host: "127.0.0.1",
  username: "root",
  key_path: "~/.ssh/id_rsa",
  name: "unknown"
}

OptionParser.new do |opts|
  opts.on("--host HOST") { |host| options[:host] = host } 
  opts.on("--username USERNAME") { |username| options[:username] = username }
  opts.on("--key-path KEY_PATH") { |key_path| options[:key_path] = key_path }
  opts.on("--min MIN_GB") { |count| options[:min] = count.to_i }
  opts.on("--path PATH") { |path| options[:path] = path }

  opts.on "--help" do
    puts opts
    exit 0
  end 
end.parse!

begin
  Timeout.timeout(30) do
    Net::SSH.start(options[:host], options[:username], keys: [options[:key_path]], keys_only: true) do |ssh|
      begin
        if options[:path] !~ /\A[\/a-zA-Z0-9_-]+\Z/
          puts "DISK SPACE CRITICAL - Invalid path: #{options[:path]}"
          exit 2
        end

        output = ssh.exec!("df -BG #{options[:path]}").lines.last.strip.split(/\s+/)[3]

        if output.to_i < options[:min].to_i
          puts "DISK SPACE CRITICAL - path #{options[:path]}, #{output} free, #{options[:min]}G required"
          exit 2
        else
          puts "DISK SPACE OK - path #{options[:path]}, #{output}, #{options[:min]}G required"
          exit 0
        end
      rescue => e
        puts "DISK SPACE CRITICAL - #{e.message}"
        exit 2
      end
    end
  end
rescue => e
  puts "DISK SPACE CRITICAL - #{e.message}"
  exit 2
end

